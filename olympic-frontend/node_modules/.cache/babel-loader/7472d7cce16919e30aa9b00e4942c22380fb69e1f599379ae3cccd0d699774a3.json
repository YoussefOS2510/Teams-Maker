{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Youssef\\\\Desktop\\\\Teams Summer 2025\\\\olympic-frontend\\\\src\\\\components\\\\GoogleSheetsData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n// Helper to extract sheet ID from URL or return as-is if already an ID\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction extractSheetId(urlOrId) {\n  if (!urlOrId) return '';\n  const match = urlOrId.match(/\\/d\\/([a-zA-Z0-9-_]+)/);\n  return match ? match[1] : urlOrId;\n}\nconst API_KEY = 'AIzaSyDikFRwZNuVTMS4k4Mc9R3KxWqF0sXG0ms'; // <-- PUT YOUR API KEY HERE\nconst RANGE = 'Main!A1:H'; // Main sheet, columns A-H\n\nconst GoogleSheetsData = ({\n  sheetUrl\n}) => {\n  _s();\n  const [teams, setTeams] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState(null);\n  const [initialLoad, setInitialLoad] = useState(true);\n  useEffect(() => {\n    if (!sheetUrl) {\n      setError('No Google Sheet URL or ID provided.');\n      setLoading(false);\n      return;\n    }\n    fetchTeams(true);\n    const interval = setInterval(() => fetchTeams(false), 20000); // 20 seconds\n    return () => clearInterval(interval);\n    // eslint-disable-next-line\n  }, [sheetUrl]);\n  const fetchTeams = async (isInitial = false) => {\n    if (isInitial) setLoading(true);\n    setError(null);\n    try {\n      const SHEET_ID = extractSheetId(sheetUrl);\n      if (!SHEET_ID) throw new Error('Invalid Google Sheet URL or ID.');\n      const url = `https://sheets.googleapis.com/v4/spreadsheets/${SHEET_ID}/values/${RANGE}?key=${API_KEY}`;\n      const response = await fetch(url);\n      if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n      const data = await response.json();\n      if (!data.values || data.values.length === 0) {\n        setTeams([]);\n        setLastUpdated(new Date());\n        if (isInitial) setLoading(false);\n        setInitialLoad(false);\n        return;\n      }\n      // Pad all rows to 8 columns\n      const allRows = data.values.map(row => {\n        const padded = [...row];\n        while (padded.length < 8) padded.push('');\n        return padded.slice(0, 8);\n      });\n      // allRows[0] = headers, allRows[1..] = data\n      const teamList = allRows[0].map((header, colIdx) => ({\n        name: header,\n        members: allRows.slice(1).map(row => row[colIdx]).filter(cell => cell && cell.trim() !== '')\n      }));\n      setTeams(teamList);\n      setLastUpdated(new Date());\n    } catch (err) {\n      setError(`Failed to load data: ${err.message}`);\n    } finally {\n      if (isInitial) setLoading(false);\n      setInitialLoad(false);\n    }\n  };\n  if (loading && initialLoad) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading teams from Google Sheets...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchTeams(false),\n        className: \"refresh-btn\",\n        children: \"Refresh Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n  if (teams.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No teams found in the Google Sheet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Make sure your sheet is published to the web and contains data.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"google-sheets-data\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Teams & Members\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"last-updated\",\n          children: lastUpdated && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"update-time\",\n            children: [\"Last updated: \", lastUpdated.toLocaleTimeString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => fetchTeams(false),\n          className: \"refresh-btn\",\n          children: \"Refresh Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"teams-grid\",\n      children: teams.map((team, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"team-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"team-header\",\n          children: team.name || `Team ${idx + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"team-members\",\n          children: team.members.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"no-members\",\n            children: \"No members\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this) : team.members.map((member, mIdx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: member\n          }, mIdx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleSheetsData, \"Jp6lMh9Yz5Oj1XZTRIVH+lP8Tbo=\");\n_c = GoogleSheetsData;\nexport default GoogleSheetsData;\nvar _c;\n$RefreshReg$(_c, \"GoogleSheetsData\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","extractSheetId","urlOrId","match","API_KEY","RANGE","GoogleSheetsData","sheetUrl","_s","teams","setTeams","loading","setLoading","error","setError","lastUpdated","setLastUpdated","initialLoad","setInitialLoad","fetchTeams","interval","setInterval","clearInterval","isInitial","SHEET_ID","Error","url","response","fetch","ok","status","data","json","values","length","Date","allRows","map","row","padded","push","slice","teamList","header","colIdx","name","members","filter","cell","trim","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toLocaleTimeString","team","idx","member","mIdx","_c","$RefreshReg$"],"sources":["C:/Users/Youssef/Desktop/Teams Summer 2025/olympic-frontend/src/components/GoogleSheetsData.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n// Helper to extract sheet ID from URL or return as-is if already an ID\r\nfunction extractSheetId(urlOrId) {\r\n  if (!urlOrId) return '';\r\n  const match = urlOrId.match(/\\/d\\/([a-zA-Z0-9-_]+)/);\r\n  return match ? match[1] : urlOrId;\r\n}\r\n\r\nconst API_KEY = 'AIzaSyDikFRwZNuVTMS4k4Mc9R3KxWqF0sXG0ms'; // <-- PUT YOUR API KEY HERE\r\nconst RANGE = 'Main!A1:H'; // Main sheet, columns A-H\r\n\r\nconst GoogleSheetsData = ({ sheetUrl }) => {\r\n  const [teams, setTeams] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [lastUpdated, setLastUpdated] = useState(null);\r\n  const [initialLoad, setInitialLoad] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (!sheetUrl) {\r\n      setError('No Google Sheet URL or ID provided.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    fetchTeams(true);\r\n    const interval = setInterval(() => fetchTeams(false), 20000); // 20 seconds\r\n    return () => clearInterval(interval);\r\n    // eslint-disable-next-line\r\n  }, [sheetUrl]);\r\n\r\n  const fetchTeams = async (isInitial = false) => {\r\n    if (isInitial) setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const SHEET_ID = extractSheetId(sheetUrl);\r\n      if (!SHEET_ID) throw new Error('Invalid Google Sheet URL or ID.');\r\n      const url = `https://sheets.googleapis.com/v4/spreadsheets/${SHEET_ID}/values/${RANGE}?key=${API_KEY}`;\r\n      const response = await fetch(url);\r\n      if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\r\n      const data = await response.json();\r\n      if (!data.values || data.values.length === 0) {\r\n        setTeams([]);\r\n        setLastUpdated(new Date());\r\n        if (isInitial) setLoading(false);\r\n        setInitialLoad(false);\r\n        return;\r\n      }\r\n      // Pad all rows to 8 columns\r\n      const allRows = data.values.map(row => {\r\n        const padded = [...row];\r\n        while (padded.length < 8) padded.push('');\r\n        return padded.slice(0, 8);\r\n      });\r\n      // allRows[0] = headers, allRows[1..] = data\r\n      const teamList = allRows[0].map((header, colIdx) => ({\r\n        name: header,\r\n        members: allRows.slice(1).map(row => row[colIdx]).filter(cell => cell && cell.trim() !== '')\r\n      }));\r\n      setTeams(teamList);\r\n      setLastUpdated(new Date());\r\n    } catch (err) {\r\n      setError(`Failed to load data: ${err.message}`);\r\n    } finally {\r\n      if (isInitial) setLoading(false);\r\n      setInitialLoad(false);\r\n    }\r\n  };\r\n\r\n  if (loading && initialLoad) {\r\n    return (\r\n      <div className=\"loading\">\r\n        <p>Loading teams from Google Sheets...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"error\">\r\n        <p>Error: {error}</p>\r\n        <button onClick={() => fetchTeams(false)} className=\"refresh-btn\">\r\n          Refresh Now\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (teams.length === 0) {\r\n    return (\r\n      <div className=\"no-data\">\r\n        <p>No teams found in the Google Sheet.</p>\r\n        <p>Make sure your sheet is published to the web and contains data.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"google-sheets-data\">\r\n      <div className=\"data-header\">\r\n        <h2>Teams & Members</h2>\r\n        <div className=\"header-controls\">\r\n          <div className=\"last-updated\">\r\n            {lastUpdated && (\r\n              <span className=\"update-time\">\r\n                Last updated: {lastUpdated.toLocaleTimeString()}\r\n              </span>\r\n            )}\r\n          </div>\r\n          <button onClick={() => fetchTeams(false)} className=\"refresh-btn\">\r\n            Refresh Now\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"teams-grid\">\r\n        {teams.map((team, idx) => (\r\n          <div className=\"team-card\" key={idx}>\r\n            <div className=\"team-header\">{team.name || `Team ${idx + 1}`}</div>\r\n            <ul className=\"team-members\">\r\n              {team.members.length === 0 ? (\r\n                <li className=\"no-members\">No members</li>\r\n              ) : (\r\n                team.members.map((member, mIdx) => (\r\n                  <li key={mIdx}>{member}</li>\r\n                ))\r\n              )}\r\n            </ul>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleSheetsData; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}