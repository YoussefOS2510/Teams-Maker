{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Youssef\\\\Desktop\\\\Teams Summer 2025\\\\olympic-frontend\\\\src\\\\components\\\\GoogleSheetsData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n// Helper to extract sheet ID from URL or return as-is if already an ID\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction extractSheetId(urlOrId) {\n  if (!urlOrId) return '';\n  const match = urlOrId.match(/\\/d\\/([a-zA-Z0-9-_]+)/);\n  return match ? match[1] : urlOrId;\n}\nconst API_KEY = 'AIzaSyDikFRwZNuVTMS4k4Mc9R3KxWqF0sXG0ms'; // <-- PUT YOUR API KEY HERE\nconst RANGE = 'Main!A1:H'; // Main sheet, columns A-H\n\nconst olympicColors = ['#0081C8',\n// Blue\n'#FFD100',\n// Yellow\n'#000',\n// Black\n'#009F3D',\n// Green\n'#EF3340' // Red\n];\nconst GoogleSheetsData = ({\n  sheetUrl\n}) => {\n  _s();\n  const [teams, setTeams] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState(null);\n  const [initialLoad, setInitialLoad] = useState(true);\n  useEffect(() => {\n    if (!sheetUrl) {\n      setError('No Google Sheet URL or ID provided.');\n      setLoading(false);\n      return;\n    }\n    fetchTeams(true);\n    const interval = setInterval(() => fetchTeams(false), 20000); // 20 seconds\n    return () => clearInterval(interval);\n    // eslint-disable-next-line\n  }, [sheetUrl]);\n  const fetchTeams = async (isInitial = false) => {\n    if (isInitial) setLoading(true);\n    setError(null);\n    try {\n      const SHEET_ID = extractSheetId(sheetUrl);\n      if (!SHEET_ID) throw new Error('Invalid Google Sheet URL or ID.');\n      const url = `https://sheets.googleapis.com/v4/spreadsheets/${SHEET_ID}/values/${RANGE}?key=${API_KEY}`;\n      const response = await fetch(url);\n      if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n      const data = await response.json();\n      if (!data.values || data.values.length === 0) {\n        setTeams([]);\n        setLastUpdated(new Date());\n        if (isInitial) setLoading(false);\n        setInitialLoad(false);\n        return;\n      }\n      // Pad all rows to 8 columns\n      const allRows = data.values.map(row => {\n        const padded = [...row];\n        while (padded.length < 8) padded.push('');\n        return padded.slice(0, 8);\n      });\n      // allRows[0] = headers, allRows[1..] = data\n      const teamList = allRows[0].map((header, colIdx) => ({\n        name: header,\n        members: allRows.slice(1).map(row => row[colIdx]).filter(cell => cell && cell.trim() !== '')\n      }));\n      setTeams(teamList);\n      setLastUpdated(new Date());\n    } catch (err) {\n      setError(`Failed to load data: ${err.message}`);\n    } finally {\n      if (isInitial) setLoading(false);\n      setInitialLoad(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gsheet-card gsheet-card-compact\",\n    children: loading && initialLoad ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading teams from Google Sheets...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchTeams(false),\n        className: \"refresh-btn\",\n        children: \"Refresh Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this) : teams.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No teams found in the Google Sheet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Make sure your sheet is published to the web and contains data.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gsheet-header gsheet-header-compact\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"gsheet-title\",\n          children: \"Teams & Members\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gsheet-controls\",\n          children: [lastUpdated && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"gsheet-update-time\",\n            children: [\"Last updated: \", lastUpdated.toLocaleTimeString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => fetchTeams(false),\n            className: \"refresh-btn\",\n            children: \"Refresh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gsheet-teams-grid gsheet-teams-grid-compact\",\n        children: teams.map((team, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gsheet-team-card gsheet-team-card-compact\",\n          style: {\n            borderLeft: `6px solid ${olympicColors[idx % olympicColors.length]}`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gsheet-team-header gsheet-team-header-compact\",\n            children: team.name || `Team ${idx + 1}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"gsheet-team-members gsheet-team-members-compact\",\n            children: team.members.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"gsheet-no-members\",\n              children: \"No members\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 21\n            }, this) : team.members.map((member, mIdx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: member\n            }, mIdx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleSheetsData, \"Jp6lMh9Yz5Oj1XZTRIVH+lP8Tbo=\");\n_c = GoogleSheetsData;\nexport default GoogleSheetsData;\nvar _c;\n$RefreshReg$(_c, \"GoogleSheetsData\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","extractSheetId","urlOrId","match","API_KEY","RANGE","olympicColors","GoogleSheetsData","sheetUrl","_s","teams","setTeams","loading","setLoading","error","setError","lastUpdated","setLastUpdated","initialLoad","setInitialLoad","fetchTeams","interval","setInterval","clearInterval","isInitial","SHEET_ID","Error","url","response","fetch","ok","status","data","json","values","length","Date","allRows","map","row","padded","push","slice","teamList","header","colIdx","name","members","filter","cell","trim","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toLocaleTimeString","team","idx","style","borderLeft","member","mIdx","_c","$RefreshReg$"],"sources":["C:/Users/Youssef/Desktop/Teams Summer 2025/olympic-frontend/src/components/GoogleSheetsData.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n// Helper to extract sheet ID from URL or return as-is if already an ID\r\nfunction extractSheetId(urlOrId) {\r\n  if (!urlOrId) return '';\r\n  const match = urlOrId.match(/\\/d\\/([a-zA-Z0-9-_]+)/);\r\n  return match ? match[1] : urlOrId;\r\n}\r\n\r\nconst API_KEY = 'AIzaSyDikFRwZNuVTMS4k4Mc9R3KxWqF0sXG0ms'; // <-- PUT YOUR API KEY HERE\r\nconst RANGE = 'Main!A1:H'; // Main sheet, columns A-H\r\n\r\nconst olympicColors = [\r\n  '#0081C8', // Blue\r\n  '#FFD100', // Yellow\r\n  '#000',    // Black\r\n  '#009F3D', // Green\r\n  '#EF3340'  // Red\r\n];\r\n\r\nconst GoogleSheetsData = ({ sheetUrl }) => {\r\n  const [teams, setTeams] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [lastUpdated, setLastUpdated] = useState(null);\r\n  const [initialLoad, setInitialLoad] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (!sheetUrl) {\r\n      setError('No Google Sheet URL or ID provided.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    fetchTeams(true);\r\n    const interval = setInterval(() => fetchTeams(false), 20000); // 20 seconds\r\n    return () => clearInterval(interval);\r\n    // eslint-disable-next-line\r\n  }, [sheetUrl]);\r\n\r\n  const fetchTeams = async (isInitial = false) => {\r\n    if (isInitial) setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const SHEET_ID = extractSheetId(sheetUrl);\r\n      if (!SHEET_ID) throw new Error('Invalid Google Sheet URL or ID.');\r\n      const url = `https://sheets.googleapis.com/v4/spreadsheets/${SHEET_ID}/values/${RANGE}?key=${API_KEY}`;\r\n      const response = await fetch(url);\r\n      if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\r\n      const data = await response.json();\r\n      if (!data.values || data.values.length === 0) {\r\n        setTeams([]);\r\n        setLastUpdated(new Date());\r\n        if (isInitial) setLoading(false);\r\n        setInitialLoad(false);\r\n        return;\r\n      }\r\n      // Pad all rows to 8 columns\r\n      const allRows = data.values.map(row => {\r\n        const padded = [...row];\r\n        while (padded.length < 8) padded.push('');\r\n        return padded.slice(0, 8);\r\n      });\r\n      // allRows[0] = headers, allRows[1..] = data\r\n      const teamList = allRows[0].map((header, colIdx) => ({\r\n        name: header,\r\n        members: allRows.slice(1).map(row => row[colIdx]).filter(cell => cell && cell.trim() !== '')\r\n      }));\r\n      setTeams(teamList);\r\n      setLastUpdated(new Date());\r\n    } catch (err) {\r\n      setError(`Failed to load data: ${err.message}`);\r\n    } finally {\r\n      if (isInitial) setLoading(false);\r\n      setInitialLoad(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"gsheet-card gsheet-card-compact\">\r\n      {loading && initialLoad ? (\r\n        <div className=\"loading\">\r\n          <p>Loading teams from Google Sheets...</p>\r\n        </div>\r\n      ) : error ? (\r\n        <div className=\"error\">\r\n          <p>Error: {error}</p>\r\n          <button onClick={() => fetchTeams(false)} className=\"refresh-btn\">\r\n            Refresh Now\r\n          </button>\r\n        </div>\r\n      ) : teams.length === 0 ? (\r\n        <div className=\"no-data\">\r\n          <p>No teams found in the Google Sheet.</p>\r\n          <p>Make sure your sheet is published to the web and contains data.</p>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"gsheet-header gsheet-header-compact\">\r\n            <span className=\"gsheet-title\">Teams & Members</span>\r\n            <div className=\"gsheet-controls\">\r\n              {lastUpdated && (\r\n                <span className=\"gsheet-update-time\">\r\n                  Last updated: {lastUpdated.toLocaleTimeString()}\r\n                </span>\r\n              )}\r\n              <button onClick={() => fetchTeams(false)} className=\"refresh-btn\">\r\n                Refresh\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"gsheet-teams-grid gsheet-teams-grid-compact\">\r\n            {teams.map((team, idx) => (\r\n              <div\r\n                className=\"gsheet-team-card gsheet-team-card-compact\"\r\n                key={idx}\r\n                style={{ borderLeft: `6px solid ${olympicColors[idx % olympicColors.length]}` }}\r\n              >\r\n                <div className=\"gsheet-team-header gsheet-team-header-compact\">\r\n                  {team.name || `Team ${idx + 1}`}\r\n                </div>\r\n                <ul className=\"gsheet-team-members gsheet-team-members-compact\">\r\n                  {team.members.length === 0 ? (\r\n                    <li className=\"gsheet-no-members\">No members</li>\r\n                  ) : (\r\n                    team.members.map((member, mIdx) => (\r\n                      <li key={mIdx}>{member}</li>\r\n                    ))\r\n                  )}\r\n                </ul>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleSheetsData; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}